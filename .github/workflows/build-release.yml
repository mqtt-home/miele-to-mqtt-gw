name: Build release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: Release type
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: philipparndt/get-release-number@v1
        id: next
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          releaseType: ${{ github.event.inputs.releaseType }}

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Update version to ${{ steps.next.outputs.version }}
        env:
          USENAME: ${{github.actor}}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.next.outputs.version }}
        run: mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$RELEASE_VERSION --file src/pom.xml --settings .github/workflows/settings.xml

      - name: Build with Maven
        env:
          MIELE_CLIENT_ID: ${{ secrets.MIELE_CLIENT_ID }}
          MIELE_CLIENT_SECRET: ${{ secrets.MIELE_CLIENT_SECRET }}
          MIELE_PASSWORD: ${{ secrets.MIELE_PASSWORD }}
          MIELE_USERNAME: ${{ secrets.MIELE_USERNAME }}
          USENAME: ${{github.actor}}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B package verify --file src/pom.xml --settings .github/workflows/settings.xml

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker container and push
        id: docker_build
        uses: docker/build-push-action@v3
        env:
          RELEASE_VERSION: ${{ steps.next.outputs.version }}
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: |
            pharndt/mielemqtt:latest
            pharndt/mielemqtt:${{env.RELEASE_VERSION}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.next.outputs.version }}
        with:
          tag_name: ${{env.RELEASE_VERSION}}
          release_name: ${{env.RELEASE_VERSION}}
          body: |
            Docker tag: `pharndt/mielemqtt:${{env.RELEASE_VERSION}}`

            Changes in this Release
              - ...

          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/de.rnd7.mieletomqtt/target/miele-to-mqtt-gw.jar
          asset_name: miele-to-mqtt-gw.jar
          asset_content_type: application/jar
